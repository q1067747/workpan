<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hebtu.mapper.CollegeMapper">

    <!--college的映射结果集-->
    <resultMap type="com.hebtu.entity.College" id="CollegeMap">
        <result property="collegeId" column="college_id" jdbcType="INTEGER"/>
        <result property="collegeName" column="college_name" jdbcType="VARCHAR"/>
    </resultMap>
    
    <!--全部字段-->
    <sql id="allColumn"> college_id, college_name </sql>
    
    <!--添加语句的字段列表-->
    <sql id="insertColumn">
        <if test="collegeName != null and collegeName != ''">
                college_name,
        </if>
    </sql>
    
    <!--添加语句的值列表-->
        <sql id="insertValue">
        <if test="collegeName != null and collegeName != ''">
                #{collegeName},
        </if>
    </sql>
    
    <!--通用对College各个属性的值的非空判断-->
    <sql id="commonsValue">
        <if test="collegeName != null and collegeName != ''">
                college_name = #{collegeName},
        </if>
    </sql>
    
    <!--新增college:哪个字段不为空就添加哪列数据,返回自增主键-->
    <insert id="insert" keyProperty="collegeId" useGeneratedKeys="true">
        insert into college
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"/>
        </trim>
    </insert>
   
    <!--删除college:通过主键-->
    <delete id="deleteById">
        delete from college
        <where>
            college_id = #{collegeId}
        </where>
    </delete>
    
    <!--查询单个college-->
    <select id="queryById" resultMap="CollegeMap">
        select
        <include refid="allColumn"></include>
        from college
        <where>
            college_id = #{collegeId}
        </where>
    </select>

    <!--查询所有college-->
    <select id="queryAllByLimit" resultMap="CollegeMap">
        select
        <include refid="allColumn"></include>
        from college
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CollegeMap">
        select
          <include refid="allColumn"></include>
        from college
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
    </select>

    <!--通过主键修改数据-->
    <update id="update">
        update college
        <set>
            <include refid="commonsValue"></include>
        </set>
        <where>
            college_id = #{collegeId}
        </where>
    </update>

</mapper>